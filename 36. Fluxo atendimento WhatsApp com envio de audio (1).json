{
  "name": "36. Fluxo atendimento WhatsApp com envio de audio",
  "nodes": [
    {
      "parameters": {},
      "id": "905b9b7a-da07-44ff-8634-8804112fb73b",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        2220,
        80
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "2cb4e900-09dd-4fb4-aff5-4219c318e85d",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1100,
        -60
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "17694db0-6248-444f-afb9-ff7ed13996ef",
              "name": "pergunta",
              "value": "={{ $('Webhook').item.json.body.data.message.extendedTextMessage.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "647c5ebd-990c-496c-8792-53f7f5075671",
      "name": "Texto Web",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        20,
        -640
      ],
      "notesInFlow": false,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2f8e1fbf-9134-4b48-be29-066509e021f5",
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "a6004904-d9e1-4627-be79-d2a5b073d44f",
              "name": "mensagem",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "05b8adb7-26e0-4772-9fcc-fe7d71f209bb",
      "name": "Filta Msg App",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        20,
        -420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normaliza').item.json.instance.Server_url }}/chat/getBase64FromMediaMessage/{{ $('Normaliza').item.json.instance.Name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normaliza').item.json.instance.Apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\":  \"{{ $('Normaliza').item.json.message.message_id }}\"\n        }\n    },\n    \"convertToMp4\": true\n} ",
        "options": {}
      },
      "id": "d7e1f8b7-a553-4a9d-8477-7e47d57f998a",
      "name": "Envio de Imagens",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        20,
        -220
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "image",
          "mimeType": ""
        }
      },
      "id": "dad685f9-ffee-4f03-9894-d1e04c7d99d3",
      "name": "Converter Imagem",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        320,
        -220
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "93258e57-6ef6-46ed-b96b-89082dda670d",
      "name": "Extrair Dados",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        500,
        100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normaliza').item.json.instance.Server_url }}/chat/getBase64FromMediaMessage/{{ $('Normaliza').item.json.instance.Name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normaliza').item.json.instance.Apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\":  \"{{ $('Normaliza').item.json.message.message_id }}\"\n        }\n    },\n    \"convertToMp4\": true\n} ",
        "options": {}
      },
      "id": "b92c440c-e4b4-4f58-a064-238a7ac097b2",
      "name": "Envio de Documentos1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        20,
        100
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "=image {{ $('Switch').item.json.body.data.message.documentMessage.fileName }}",
          "mimeType": "={{ $('Switch').item.json.body.data.message.documentMessage.mimetype }}"
        }
      },
      "id": "1ba9b4c3-2c61-4462-9b76-e7c80288c3eb",
      "name": "Converter Arquivo1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        220,
        100
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Normaliza').item.json.message.chat_id }}_mem",
        "sessionTTL": 10000
      },
      "id": "c0b38d44-0f31-437c-aa88-9ca66d640b22",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        1480,
        -120
      ]
    },
    {
      "parameters": {
        "jsCode": "function limparMensagem(texto) {\n  if (typeof texto !== 'string') {\n    return '';\n  }\n\n  // Função para remover metadados e dados técnicos\n  function removerMetadataTecnico(str) {\n    return str\n      // Remove objetos e chaves de metadados específicos\n      .replace(/\"response_metadata\"\\s*:\\s*{[^}]*}/g, '')  // Remove \"response_metadata\"\n      .replace(/\"additional_kwargs\"\\s*:\\s*{[^}]*}/g, '')  // Remove \"additional_kwargs\"\n      .replace(/\"tool_calls\"\\s*:\\s*\\[\\s*\\]/g, '')  // Remove \"tool_calls\" vazio\n      .replace(/\"invalid_tool_calls\"\\s*:\\s*\\[\\s*\\]/g, '')  // Remove \"invalid_tool_calls\" vazio\n      .replace(/\"type\"\\s*:\\s*\"(ai|human)\"/g, '')  // Remove os tipos \"ai\" e \"human\"\n      .replace(/\"data\"\\s*:\\s*{[^}]*}/g, '')  // Remove a chave \"data\"\n      // Remove objetos JSON em excesso ou vazios\n      .replace(/,\\s*{[^}]*}/g, '') // Remove objetos soltos\n      .replace(/,\\s*\\[\\s*\\]/g, '') // Remove arrays vazios\n      .replace(/\\s*:\\s*null/g, '') // Remove valores null\n      .replace(/\\s*:\\s*\\[\\]/g, '') // Remove arrays vazios\n      .replace(/\\s*:\\s*{}/g, '') // Remove objetos vazios\n      // Ajusta espaços desnecessários\n      .replace(/\\s+/g, ' ')\n      .replace(/^\\s+|\\s+$/g, '');  // Remove espaços no início e fim\n  }\n\n  // Função para limpar caracteres especiais\n  function limparCaracteresEspeciais(str) {\n    return str\n      .replace(/\\\\\\\\[rnt]/g, ' ')  // Limpa sequências de escape\n      .replace(/\\\\\\\\\\\"/g, '')  // Remove as aspas escapadas\n      .replace(/\\\\\\\\\\\\\\\\/g, '')  // Remove barras invertidas\n      .replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '')  // Remove caracteres de controle\n      .replace(/\\\"+/g, '')  // Remove aspas extras\n      .replace(/[{}[\\]]/g, '')  // Remove chaves e colchetes extras\n      .trim();\n  }\n\n  // Função para extrair e limpar a mensagem principal\n  function extrairMensagemPrincipal(str) {\n    // Divide em frases, removendo pontuação extra\n    const frases = str.split(/(?<=[.!?])\\s+/);\n\n    return frases\n      .map(frase => frase.trim())\n      .filter(frase => {\n        // Remove frases que ainda têm metadados ou são irrelevantes\n        return frase.length > 0 &&\n          !frase.includes('tool_calls') &&\n          !frase.includes('invalid_tool_calls') &&\n          !frase.match(/^[:\\s\\[\\]{}]+$/);\n      })\n      .join(' ');\n  }\n\n  // Processo de limpeza e extração\n  let resultado = texto;\n\n  // Passo 1: Remove metadados e chaves indesejadas\n  resultado = removerMetadataTecnico(resultado);\n\n  // Passo 2: Extrai a mensagem relevante, ignorando o que não é necessário\n  resultado = extrairMensagemPrincipal(resultado);\n\n  // Passo 3: Remove caracteres especiais e formatação indesejada\n  resultado = limparCaracteresEspeciais(resultado);\n\n  // Limpeza final para remover espaços extras\n  resultado = resultado\n    .replace(/\\s+/g, ' ')\n    .replace(/^[\\\",\\s]+|[\\\",\\s]+$/g, '')\n    .trim();\n\n  return resultado;\n}\n\nfunction processarMensagens(items) {\n  return items.map(item => {\n    try {\n      if (!item?.json?.mensagem) {\n        return item;\n      }\n\n      let mensagem = item.json.mensagem;\n\n      // Se for objeto, converte para string\n      if (typeof mensagem === 'object') {\n        try {\n          mensagem = JSON.stringify(mensagem);\n        } catch (e) {\n          console.error('Erro ao converter objeto para string:', e);\n          return item;\n        }\n      }\n\n      // Aplica a limpeza\n      const mensagemLimpa = limparMensagem(mensagem);\n\n      // Atualiza apenas se houver conteúdo significativo\n      if (mensagemLimpa && mensagemLimpa.length > 0) {\n        item.json.mensagem = mensagemLimpa;\n      }\n\n      return { json: item.json };\n    } catch (error) {\n      console.error('Erro ao processar item:', error);\n      return item;\n    }\n  });\n}\n\n// Execução principal\ntry {\n  const items = $input.all();\n  return processarMensagens(items);\n} catch (error) {\n  console.error('Erro na execução:', error);\n  throw error;\n}\n"
      },
      "id": "cbb5bdda-3fb7-49a6-b5a5-ef85b1c49196",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1260,
        -380
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva essa imagem, oque tem nela?",
        "inputType": "base64",
        "options": {}
      },
      "id": "c85b982c-4730-44d7-b011-9e91636e36cf",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        500,
        -220
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.message.chat_id }}_timeout",
        "options": {}
      },
      "id": "a9e18591-4e53-4155-a79a-901221ead8be",
      "name": "Get Block Chat Id",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        540,
        -1120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA PODE RESPONDER"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA NAO PODE RESPONDER"
            }
          ]
        },
        "options": {}
      },
      "id": "98be55cf-3e90-4354-a607-2c899b1b2361",
      "name": "Switch Block",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        820,
        -1380
      ]
    },
    {
      "parameters": {},
      "id": "be6b9595-5537-475c-aa12-470ecb28ccb8",
      "name": "No Operation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1160,
        -1120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "101c3ff7-e997-43bb-8e99-fe82746c5993",
                    "leftValue": "={{ $('Webhook').item.json.body.data.message.audioMessage }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audioMessage"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "4b94d2ac-53e5-4153-9377-4cc6db20cb1c",
                    "leftValue": "={{ $json.body.data.message.extendedTextMessage }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "extendedTextMessage"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "38226af4-80fe-4155-9ceb-2379f44e29ed",
                    "leftValue": "={{ $('Webhook').item.json.body.data.message.conversation }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "conversation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "300366d9-2416-4cf4-93c3-e48c8761c60f",
                    "leftValue": "={{ $('Webhook').item.json.body.data.message.imageMessage }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imageMessage"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f33566fd-3eb9-45f4-934a-3a39e2adca6c",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType === 'documentMessage' }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "documentMessage"
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "id": "03ac8272-c76c-4946-bca1-aacfa425d5d2",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -700,
        -400
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ (() => $json.text ? $json.text : $json.content)() || $json.mensagem}}\n",
        "options": {
          "systemMessage": "=Hoje é  {{ $now.toString() }} e você é a Letty, assistente que está recepcionando os clientes no whatsapp da clínica de estética “Encha de Beleza”. O seu papel é entender o que os cliente buscam e realizar agendamentos de consultas. Atue de maneira humanizada e profissional.\n\nHorário de funcionamento: \n08:00 as 21:00 de segunda  a sexta\n\nEndereço: Shopping Conjunto Nacional – Sala 1024 – Brasília DF\n\nCaso o cliente queira dicas sobre receitas caseiras para beleza consute a função \"Vector Store Tool\"\n\nPasso a passo do atendimento:\n1) descubra o motivo do atendimento\n2) faça sugestão pra uma avaliação gratuita\n3) se não quiser fazer a avaliação ofereça marcar um procedimento\n4) colete os dados como, nome completo, idade e horário disponível para realizar o agendamento\n\n\nPasso a passo do atendimento:\n1) Pergunte o horário que o cliente quer fazer o procedimento. Use a ferramenta “Buscar Disponibilidade” para verificar se o horário está vago. Se não houver disponibilidade peça outro horário. Exemplo:\nSituação 1: “Qual horário você gostaria de fazer seu {{nome_do_procedimento}}?”\nSituação 2: “Esse horário está ocupado, poderia me informar outro horário?”\nSituação 3: “Ótimo, esse horário está vago, posso marcar?”\n2) Se o horário estiver vago e o cliente permitir você vai precisar coletar os dados do cliente para agendamento: {{nome}} e {{email}}\nExemplo:\n“Poderia me informar o seu nome completo para eu completar o agendamento?”\n3) Quando tiver o nome do procedimento, o email do cliente e nome completo acione a ferramenta “Criar Consulta1”\n4) Quando o agendamento for finalizado informe-o do sucesso e com os dados de “eventId”, data e horário e nome do procedimento\nExemplo:\n\nSituação de sucesso: “ A sua consulta foi marcada e será na nossa clínica no Conjunto nacional sala 1024.\nHorário: {{horário_marcado}}\nProcedimento: {{nome_do_procedimento}}\nCaso queira cancelar ou modificar seu evendo informe esse código {{eventId}}”\n\nSituação de erro: “Não conseguimos realizar seu agendamento, posso ternar novamente maracar um {{nome_do_procedimento}} no dia {{horário_marcado}} utilizando o e-mail {{email}}? Esses dados estão corretos?”\n\n\nRegras obrigatórias:  \n- Nunca finalize uma consulta sem validar a disponibilidade antes.  \n- Sempre peça o e-mail do cliente para concluir o agendamento.  \n- Sempre envie o ID da consulta ao final do agendamento.  \n- Nunca sugira horários sem antes consultar a agenda.  \n- Se a data informada for no passado ou no mesmo dia, informe que apenas datas futuras são aceitas.  \n\n\n"
        }
      },
      "id": "c1432877-82e8-40ec-87df-bb920398206e",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1700,
        -520
      ]
    },
    {
      "parameters": {
        "content": "## Buffer \n",
        "height": 860,
        "width": 2079,
        "color": 6
      },
      "id": "54b15d78-87f1-47f8-9487-8fa1a883c4e2",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1400,
        -1780
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        480,
        -520
      ],
      "id": "d17dd815-1086-4f1a-8913-470caaa4c448",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {},
      "id": "027b5be0-1405-470f-b562-4426c6687d09",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2720,
        -1680
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ \n  $json.messages.length > 8 \n    ? $('Normaliza').item.json.message.message_id\n    : JSON.parse($json.messages.first()).message_id\n}}",
                    "rightValue": "={{ $('Normaliza').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "faz nada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1585bc24-0b58-4179-8919-0e9aabc0e35e",
                    "leftValue": "={{ JSON.parse($json.messages.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(8.'seconds') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": "={{ true }}",
              "outputKey": "prosseguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "esperar"
        }
      },
      "id": "b2137018-c920-4779-bcf8-3ba42b7ea4ab",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2300,
        -1420
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Normaliza').item.json.message.chat_id }}_buf",
        "messageData": "={{ JSON.stringify({   \"message\": $('Normaliza').item.json.message.content,   \"timestamp\": $now,   \"message_id\": $('Normaliza').item.json.message.message_id }) }}"
      },
      "id": "122872ae-c2f5-4d20-bbe7-93b2e9ac9931",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1540,
        -1400
      ]
    },
    {
      "parameters": {},
      "id": "5561011f-ed00-4714-8326-1bf48bbe938b",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2740,
        -1200
      ],
      "webhookId": "d9f308a6-591e-4461-9e3f-26d2e44f55f1"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messages",
        "key": "={{ $('Normaliza').item.json.message.chat_id.toString() }}_buf",
        "options": {}
      },
      "id": "a9908ba9-9e07-4c87-9bb1-04e207376580",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1920,
        -1420
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Normaliza').item.json.message.chat_id.toString() }}_buf"
      },
      "id": "f389bfa7-15b3-46aa-bb92-cebc2947369b",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2740,
        -1420
      ]
    },
    {
      "parameters": {
        "content": "## Intervenção Humana - Timeout",
        "height": 860,
        "width": 2139,
        "color": 6
      },
      "id": "789490ce-2645-4f7a-99c8-96d4fd501d55",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -780,
        -1780
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 1180,
        "width": 1599,
        "color": 5
      },
      "id": "1304a194-15c1-4fff-8e0e-9665d4013bec",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -780,
        -880
      ]
    },
    {
      "parameters": {
        "content": "## Cérebro \nTTL = Segundos\n60 = 1 Min\n900 = 15 Min",
        "height": 840,
        "width": 2599,
        "color": 5
      },
      "id": "5c987ac4-beb0-4720-8e2c-da8333ff8f8a",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        -560
      ]
    },
    {
      "parameters": {
        "content": "# atendimento com envio de Audio (Elevenlabs)",
        "height": 299,
        "width": 2600
      },
      "id": "ac9e976b-f4ef-420a-b5e1-c72122dc31ed",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        -880
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $json.body.data.key.id || '' }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $json.body.data.key.remoteJid.split('@')[0] || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('Webhook').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('Webhook').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('Webhook').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('Webhook').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.content_url",
              "value": "={{ $('Webhook').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.Content_URL",
              "value": "={{ $('Webhook').item.json.body.data.message.audioMessage?.url || '' }}{{ $('Webhook').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('Webhook').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "b2f1f6b5-292f-4695-9e41-be200c6d7053",
              "name": "instance.Name",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "572fcce5-8a26-4e8f-a48a-ef0bee569dcd",
              "name": "instance.Apikey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "e90043db-657b-461c-b040-2d6089abfbdb",
              "name": "instance.Server_url",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "348264f9-ed02-4936-ae78-bb963ccbee29",
              "name": "apiKey_eleven",
              "value": "sk_24c5816f10ebf863b5c81f7d07949ab30e94360e9",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9e4f35d4-06de-490e-a9ed-a922152b5a01",
      "name": "Normaliza",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -160,
        -1300
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "1bbd3e3a-84f3-4ab0-a699-a9e9e6ec879a",
      "name": "Origem",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        140,
        -1420
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.message.chat_id }}_timeout",
        "value": "true",
        "keyType": "string",
        "expire": true,
        "ttl": 900
      },
      "id": "5ab124c5-0014-4f87-9d4e-053ee719d155",
      "name": "Gera Timeout",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        560,
        -1680
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "7a6815c6-d97d-4101-853a-fe00d8391af5",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -620,
        -1660
      ],
      "id": "4e1d8e05-33dc-4a42-8186-dddc216c84dd",
      "name": "Webhook",
      "webhookId": "7a6815c6-d97d-4101-853a-fe00d8391af5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "db5cfe0a-7f43-4a61-8b27-bfd3a95deb8d",
              "name": "messages",
              "value": "={{ $json.messages.map(buffer => JSON.parse(buffer).message).join('\\n') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3c92511c-7c9a-4d4f-a9f8-a7c185f21d3e",
      "name": "Empacota",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3280,
        -1080
      ]
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        940,
        -260
      ],
      "id": "67e433fc-8514-4fd9-8f30-c0ff4ad19c25",
      "name": "Merge"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normaliza').item.json.instance.Server_url }}/message/sendText/{{ $('Normaliza').item.json.instance.Name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normaliza').item.json.instance.Apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('Normaliza').item.json.message.chat_id }}\",\n  \"text\": \"{{ $json.output.replace(/\\n/g, '\\\\n').replace(/\\\"/g, '\\\\\"').trim() }}\"\n}\n",
        "options": {}
      },
      "id": "e7ab6726-56fd-4abb-975c-4495920dd067",
      "name": "Enviar Mensagem WhatsApp Lead6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2660,
        -280
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Autenticação Evolution Automática:\n- Para tanto, é necessário apenas:\n1. Certificar-se de que seu WhatsApp está devidamente conectado à Evolution\n2. Utilizar a URL correta na conexão da Evolution com o n8n\n## Atente-se a conexão com o ElevenLabs:\n\n- Para o EllevenLabs funcionar preencha o campo apiKey_eleven dentro do node de Normaliza, da maneira devida",
        "height": 660,
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        -1760
      ],
      "id": "a44e05f7-9d9b-4168-b43f-587e534c612b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Tempo de Timeout\n- Você pode alterar o tempo em métricas TTL para melhor personalização do tempo de timeout\n- Utilize o site abaixo para saber em minutos quanto vale um determinado valor TTL:\n  - https://ttl-calc.com/",
        "height": 440,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        480,
        -1740
      ],
      "id": "78e254f3-a0ea-4626-b30d-42394afa7ae4",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Tempo de Buffer\n- Altere o número de segundos no node Wait1\n",
        "height": 360,
        "width": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2260,
        -1620
      ],
      "id": "c26bf427-83ce-48e1-bf38-a1f0072c8faf",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Aprenda a limpar o Redis\n**Temos aula disso**\n\n- Excesso de mensagens de teste confunde a IA\n- A aula está localizada no módulo \"Mecânico - solução de erros\" na aula \"Resetando memória do Redis\"",
        "height": 460,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1380,
        -200
      ],
      "id": "00fe01d4-2cda-40a0-999c-70fb996f5122",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Extração de Texto\n**Não lê imagem mas torna mais barato o uso de tokens**\n\n",
        "height": 280,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        400,
        -20
      ],
      "id": "0fec2ee1-4cf1-485d-9a45-f5ef1fcb75fb",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "210f8141c6cd7a7281521b45e061ae8dcbd67007623cb7306bce8d797c97a327@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "start": "={{ $fromAI(\"Start_Time\",\"Horário inicial do evento ex.:2024-10-08 00:00:00\") }}",
        "end": "={{ $fromAI(\"End_Time\",\"Horário final do evento ex.:2024-10-08 00:01:00\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI (\"e-mail\", \"o email do cliente\") }}"
          ],
          "sendUpdates": "all",
          "summary": "=Consulta - {{ $fromAI(\"Nome\") }}"
        }
      },
      "id": "a5ee66bd-ccda-4b27-9a1f-3da234d101fa",
      "name": "Criar Consulta1",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2760,
        80
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "210f8141c6cd7a7281521b45e061ae8dcbd67007623cb7306bce8d797c97a327@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "timeMin": "={{ $fromAI(\"Initital_DateTime\", \"Data e hora inicial da consulta Ex.: 2024-10-17 00:00:00\") }}",
        "timeMax": "={{ $fromAI(\"Final_DateTime\", \"Data e hora final da consulta Ex.: 2024-10-17 00:00:00\") }}",
        "options": {}
      },
      "id": "9e69ac7e-3c60-4281-bc17-eb408b099fda",
      "name": "Buscar Disponibilidade",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2560,
        80
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "210f8141c6cd7a7281521b45e061ae8dcbd67007623cb7306bce8d797c97a327@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "eventId": "={{ $fromAI(\"Event_ID\", \"O identificador único do evento a ser deletado\", \"string\") }}",
        "options": {}
      },
      "id": "cee67e66-f805-4d37-b201-c12dfc9fcd13",
      "name": "Deletar Consulta",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2380,
        80
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "\n\n\n\n\nVerificar Anotações abaixo.",
        "height": 140,
        "width": 580,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        -540
      ],
      "id": "fe42a5d4-b761-45e6-a9d8-382ec1234972",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Ferramentas / Funções \n**Aqui ficam as Ferramentas** \n- É importante que você conheça os\n  princípios para aciona-las\n- Existem infinitas possibilidades\n  dentro do N8N ",
        "height": 200,
        "width": 1280,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1920,
        40
      ],
      "id": "72781fd9-d0dc-4636-bad8-97d519bf4bea",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normaliza').item.json.instance.Server_url }}/chat/getBase64FromMediaMessage/{{ $('Normaliza').item.json.instance.Name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normaliza').item.json.instance.Apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\":  \"{{ $('Normaliza').item.json.message.message_id }}\"\n        }\n    },\n    \"convertToMp4\": true\n} ",
        "options": {}
      },
      "id": "cb450d08-2e4b-4905-b7d1-69ab1134f395",
      "name": "Mensagem de Audio1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        40,
        -860
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "audio",
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "id": "0cdf8811-c71f-45af-9378-cd3b75b6118a",
      "name": "Converter Áudio1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        280,
        -860
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "b12d00c7-ab8b-455b-8912-f52b2eeac6a2",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        500,
        -860
      ]
    },
    {
      "parameters": {
        "content": "## Prompt de Agente de I.A\nAtente-se para o prompt do Agente de I.A, que deve ser devidamente preenchido no node \"AI Agent\" no campo System Message.\n\nOs prompts serão imprescindíveis para o bom funcionamento da funcionalidade de agendamento no calendário. Segue ao lado direito um prompt padrão que você pode utilizá-lo e alterá-lo como preferir.\n\n**Dica: experimente utilizar o prompt padrão como base para gerar outros prompst a partir dele, utilizando o ChatGPT ou uma IA de sua preferência.**\n\nEm casos de problemas lembre-se sempre:\n- Atente-se para as variáveis presentes no prompt e se elas estão sendo devidamente referenciadas em todo o funcionamento do fluxo de agendamentos\n- Lembre-se sempre da importância de, em casos de problemas, principalmente quando é executado muitos testes seguidos, é sempre importante resetar a memória do Redit, você pode conferir isso na aula:\n  - A aula está localizada no módulo \"Mecânico - solução de erros\" na aula \"Resetando memória do Redis\"",
        "height": 660,
        "width": 340,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2780,
        320
      ],
      "id": "4fc6c172-c29c-41e4-ae3e-7e1a1627f9d6",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Prompt Padrão\n**Atenção, este é um padrão de prompt base ideal para __agendamentos__**\n\nObjetivo do Assistente:  \n\nEste assistente virtual foi desenvolvido para gerenciar de forma ágil, precisa e amigável os agendamentos e cancelamentos de consultas. Ele deve sempre verificar a disponibilidade antes de marcar qualquer consulta, sempre solicitar o e-mail do cliente e sempre enviar o ID da consulta no final.  \n\nRegras obrigatórias:  \n\n- Nunca finalize uma consulta sem validar a disponibilidade antes.  \n- Sempre peça o e-mail do cliente para concluir o agendamento.  \n- Sempre envie o ID da consulta ao final do agendamento.  \n- Nunca sugira horários sem antes consultar a agenda.  \n- Se a data informada for no passado ou no mesmo dia, informe que apenas datas futuras são aceitas.  \n\nA data de hoje é fornecida pela variável {{ $('Webhook').item.json.body.date_time }}. Eventos futuros só podem ser criados para datas posteriores à data atual.  \n\nEtapa 1: Buscar Disponibilidade  \n\nObjetivo: Descobrir a data e horário desejados pelo cliente, verificar a agenda e apresentar as opções disponíveis antes de marcar.  \n\nPasso a passo:  \n\n1. Pergunte ao cliente a data e horário desejados. Pergunta: \"Para qual dia e horário você gostaria de marcar sua consulta?\"  \n\n2. Verifique a disponibilidade antes de prosseguir. Acione a função \"Buscar Disponibilidade\" e liste os horários disponíveis. Nunca marque um horário sem antes verificar a agenda.  \nResposta esperada: \"No dia [data solicitada], temos os seguintes horários disponíveis: [listar horários disponíveis]. Qual horário você prefere?\"  \n\n3. Se o cliente escolher um horário, avance para a Etapa 2: Criação de Consulta.  \n\n4. Se o cliente não quiser os horários disponíveis, ofereça a opção de escolher outra data. Pergunta: \"Entendi! Me informe outra data que você tem disponível.\"  \nSe o cliente pedir todas as datas disponíveis, informe que a busca é feita por dia específico.  \n\nEtapa 2: Criação de Consulta  \n\nObjetivo: Coletar as variáveis necessárias e garantir que a consulta seja criada corretamente.  \n\nPasso a passo:  \n\n1. Peça o e-mail e o procedimento do cliente. Pergunta: \"Ótimo! Qual é o seu e-mail e qual procedimento deseja realizar?\"  \n\n2. Confirme todos os detalhes antes de criar a consulta. Pergunta: \"Certo! Seu e-mail é [email do cliente], posso confirmar sua consulta para [dia escolhido] às [horário escolhido]?\"  \n\n3. Criar a consulta na agenda. Acione a função \"Criar Consulta\" para registrar o evento. O evento sempre deve incluir o ID da consulta.  \n\n4. Envie a mensagem de confirmação com todos os detalhes, incluindo o ID da consulta.  \nResposta esperada: \"Sua consulta foi marcada com sucesso! Data: [dia da consulta], Horário: [horário da consulta], E-mail: [e-mail do cliente], Endereço: [Endereço]. Número do protocolo da consulta: [Event_ID]. Caso precise cancelar, informe o número do protocolo acima. Precisa de mais alguma ajuda?\"  \n\nEtapa 3: Cancelamento de Consulta  \n\nObjetivo: Garantir o cancelamento correto do agendamento mediante o fornecimento do protocolo (Event_ID).  \n\nPasso a passo:  \n\n1. Solicite o número do protocolo (Event_ID). Pergunta: \"Para cancelar sua consulta, por favor, informe o número do protocolo.\"  \n\n2. Valide se o protocolo é válido antes de prosseguir.  \n\n3. Cancele o evento na agenda utilizando a função \"Deletar Consulta\".  \n\n4. Confirme o cancelamento com uma mensagem clara. Resposta esperada: \"Seu agendamento [Event_ID] foi cancelado com sucesso! Caso queira remarcar ou tenha dúvidas, estou à disposição!\"  \n\nRegras finais:  \n\n- Nunca marque uma consulta sem verificar os horários disponíveis antes.  \n- Sempre solicite o e-mail do cliente antes de finalizar.  \n- Sempre envie o número do protocolo (Event_ID) no final da marcação.  \n\nEste assistente deve seguir rigorosamente essas etapas em todas as interações para garantir a precisão e eficiência do atendimento.",
        "height": 1500,
        "width": 1180,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1540,
        320
      ],
      "id": "b7b2090e-2223-4d41-a961-864228611aa2",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## Agendamentos\n\nEm casos de problemas, lembre-se sempre de conferir:\n\n**1. O prompt de I.A**\n\n**2. Limpeza da memória do Redit**\n\n**3. Variáveis, expressões e comandos utilizados dentro de cada um dos nodes de calendário (Criar Consulta1, Deletar Consulta e Buscar Disponibilidade)**",
        "height": 660,
        "width": 300,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3160,
        320
      ],
      "id": "ef5ebbcf-6c7a-43a3-80f7-d643f1d402be",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3aa3973d-97b9-4647-9859-3365191b3411",
              "leftValue": "={{ $json.output.length }}",
              "rightValue": 200,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2400,
        -500
      ],
      "id": "e487e329-af99-4597-9d6d-f01505b864e2",
      "name": "If",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3020,
        -520
      ],
      "id": "734cca8b-49a6-4079-9eba-b0a4ec926ff3",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Normaliza').item.json.instance.Server_url }}/message/sendWhatsAppAudio/{{ $('Normaliza').item.json.instance.Name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Normaliza').item.json.instance.Apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"number\": \"{{ $('Normaliza').item.json.message.chat_id }}\",\n    \"audio\": \"{{ $json.data }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3260,
        -520
      ],
      "id": "a541922f-18b3-4d0a-aa15-9400ee0e92ec",
      "name": "HTTP Request",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/jsCqWAovK2LkecY7zXl4",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "audio/mpeg"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "xi-api-key",
              "value": "={{ $('Normaliza').item.json.apiKey_eleven }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"text\": \"{{ $json.output.replace(/\\n/g, '\\\\n').replace(/\\\"/g, '\\\\\\\\\"').replace(/\\*/g, '').replace(/\\s+/g, ' ').trim() }}\",\n    \"model_id\": \"eleven_multilingual_v2\",\n    \"voice_settings\": {\n        \"stability\": 0.5,\n        \"similarity_boost\": 0.5\n    }\n}",
        "options": {}
      },
      "id": "2bbb3fb8-9237-4f24-abb1-7e2cd3cf8bd9",
      "name": "ElevenLabs",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2660,
        -520
      ],
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Texto Web": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filta Msg App": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envio de Imagens": {
      "main": [
        [
          {
            "node": "Converter Imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converter Imagem": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Dados": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Envio de Documentos1": {
      "main": [
        [
          {
            "node": "Converter Arquivo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converter Arquivo1": {
      "main": [
        [
          {
            "node": "Extrair Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Get Block Chat Id": {
      "main": [
        [
          {
            "node": "Switch Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Block": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Mensagem de Audio1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Texto Web",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Filta Msg App",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Envio de Imagens",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Envio de Documentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Enviar Mensagem WhatsApp Lead6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Empacota",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normaliza": {
      "main": [
        [
          {
            "node": "Origem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Origem": {
      "main": [
        [
          {
            "node": "Gera Timeout",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Block Chat Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Normaliza",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Empacota": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar Consulta1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Disponibilidade": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar Consulta": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem de Audio1": {
      "main": [
        [
          {
            "node": "Converter Áudio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converter Áudio1": {
      "main": [
        [
          {
            "node": "OpenAI3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "ElevenLabs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabs": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4a033434-c98d-4132-a4c7-bd01546a536c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "385c06b6bbed00452a824dd157a142ab661dedbca13fb1106183d4d0295a4f6e"
  },
  "id": "8OAElqirM1rh8P8s",
  "tags": []
}